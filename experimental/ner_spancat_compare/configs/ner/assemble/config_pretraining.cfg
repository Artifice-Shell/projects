[paths]
train = null
dev = null
vectors = "en_core_web_lg"
init_tok2vec = null
ner_p = null
ner_i = null
ner_o = null
spans_key = null

[system]
gpu_allocator = "pytorch"
seed = 0

[nlp]
lang = "en"
pipeline = ["tok2vec-p","ner-p","transfer-p","tok2vec-i","ner-i","transfer-i","tok2vec-o","ner-o","transfer-o"]
batch_size = 128
disabled = []
before_creation = null
after_creation = null
after_pipeline_creation = null
tokenizer = {"@tokenizers":"spacy.Tokenizer.v1"}

[components]

[components.ner-p]
source = ${paths.ner_p}
component = "ner"

[components.ner-p.model.tok2vec]
@architectures = "spacy.Tok2VecListener.v1"
width = ${components.tok2vec-p.model.encode.width}
upstream = "tok2vec-p"

[components.tok2vec-p]
source = ${paths.ner_p}
component = "tok2vec"

[components.ner-i]
source = ${paths.ner_i}
component = "ner"

[components.ner-i.model.tok2vec]
@architectures = "spacy.Tok2VecListener.v1"
width = ${components.tok2vec-i.model.encode.width}
upstream = "tok2vec-i"

[components.tok2vec-i]
source = ${paths.ner_i}
component = "tok2vec"

[components.ner-o]
source = ${paths.ner_o}
component = "ner"

[components.ner-o.model.tok2vec]
@architectures = "spacy.Tok2VecListener.v1"
width = ${components.tok2vec-o.model.encode.width}
upstream = "tok2vec-o"

[components.tok2vec-o]
source = ${paths.ner_o}
component = "tok2vec"

[components.transfer-p]
factory = "transfer-ent.v1"
span_key = ${paths.spans_key}

[components.transfer-i]
factory = "transfer-ent.v1"
span_key = ${paths.spans_key}

[components.transfer-o]
factory = "transfer-ent.v1"
span_key = ${paths.spans_key}

[corpora]

[corpora.dev]
@readers = "spacy.Corpus.v1"
path = ${paths.dev}
max_length = 0
gold_preproc = false
limit = 0
augmenter = null

[corpora.train]
@readers = "spacy.Corpus.v1"
path = ${paths.train}
max_length = 500
gold_preproc = false
limit = 0
augmenter = null

[training]
accumulate_gradient = 3
dev_corpus = "corpora.dev"
train_corpus = "corpora.train"
seed = ${system.seed}
gpu_allocator = ${system.gpu_allocator}
dropout = 0.1
patience = 1600
max_epochs = 0
max_steps = 20000
eval_frequency = 200
frozen_components = []
before_to_disk = null
annotating_components = []

[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = false
tolerance = 0.2

[training.batcher.size]
@schedules = "compounding.v1"
start = 100
stop = 1000
compound = 1.001

[training.logger]
@loggers = "spacy.ConsoleLogger.v1"
progress_bar = true

[training.optimizer]
@optimizers = "Adam.v1"
beta1 = 0.9
beta2 = 0.999
L2_is_weight_decay = true
L2 = 0.01
grad_clip = 1.0
use_averages = false
eps = 0.00000001

[training.optimizer.learn_rate]
@schedules = "warmup_linear.v1"
warmup_steps = 250
total_steps = 20000
initial_rate = 0.00005

[training.score_weights]
ents_f = 1
ents_p = 0.0
ents_r = 0.0
ents_per_type = null

[pretraining]

[initialize]
vectors = ${paths.vectors}
init_tok2vec = ${paths.init_tok2vec}
vocab_data = null
lookups = null
before_init = null
after_init = null

[initialize.components]

[initialize.tokenizer]